function(print_configuration)
    message("")
    message("Build configuration:")
    message("")
    message("Build type: ${CMAKE_BUILD_TYPE}")
    message("Architecture: ${ARCH}")
    message("")
    message("Build shared libraries: ${ENABLE_SHARED}")
    message("Build static libraries: ${ENABLE_STATIC}")
    message("")
    message("Using C99 variabile-size arrays: ${ENABLE_C99_ARRAYS}")
    message("Compile without the floating point API: ${ENABLE_C99_ARRAYS}")
    message("Enable fast approximations for floating point: ${ENABLE_C99_ARRAYS}")
    message("Enable non-Opus modes: ${ENABLE_C99_ARRAYS}")
    if (ENABLE_ASM)
        set(LOG_ASM "TRUE -")
        if (ENABLE_ASM_SSE)
            set(LOG_ASM "${LOG_ASM} sse")
        endif ()
        if (ENABLE_ASM_SSE2)
            set(LOG_ASM "${LOG_ASM} sse2")
        endif ()
        if (ENABLE_ASM_SSE41)
            set(LOG_ASM "${LOG_ASM} sse4.1")
        endif ()
        if (ENABLE_ASM_AVX)
            set(LOG_ASM "${LOG_ASM} axv")
        endif ()
        if (ENABLE_ASM_neon)
            set(LOG_ASM "${LOG_ASM} neon")
        endif ()
    else ()
        set(LOG_ASM "FALSE")
    endif ()
    message("Enable assembly optimizations: ${LOG_ASM}")
    message("Enable run-time CPU capabilities detection: ${ENABLE_RTCD}")
    message("Enable intrinsics optimizations: ${ENABLE_INTRINSICS}")
    message("Enable additional software error checking: ${ENABLE_ASSERTIONS}")
    message("Enable encoder to make random decisions: ${ENABLE_FUZZING}")
    message("Enable experimental ambisonic: ${ENABLE_EXPERIMENTAL_AMBISONICS}")
    message("")
    message("Build API documentation: ${ENABLE_DOC}")
    message("Build extra programs: ${ENABLE_EXTRA_PROGRAMS}")
    message("")
endfunction()
